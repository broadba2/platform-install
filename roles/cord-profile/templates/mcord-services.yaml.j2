tosca_definitions_version: tosca_simple_yaml_1_0

description: created by platform-install, need to add M-CORD services later

imports:
   - custom_types/xos.yaml
   - custom_types/vbbu.yaml
   - custom_types/vhss.yaml
   - custom_types/vmme.yaml
   - custom_types/vmm.yaml
   - custom_types/vsm.yaml
   - custom_types/vsgwc.yaml
   - custom_types/vsgwu.yaml
   - custom_types/vpgwc.yaml
   - custom_types/vpgwu.yaml

topology_template:
  node_templates:

# site, image, fully created in deployment.yaml
    {{ site_name }}:
      type: tosca.nodes.Site

    m1.small:
      type: tosca.nodes.Flavor
    m1.large:
      type: tosca.nodes.Flavor
    m1.medium:
      type: tosca.nodes.Flavor
    m1.xlarge:
      type: tosca.nodes.Flavor

    trusty-server-multi-nic:
      type: tosca.nodes.Image

# management networks, fully created in management-net.yaml
    management:
      type: tosca.nodes.network.Network.XOS
      properties:
        no-create: true
        no-delete: true
        no-update: true

{% if use_management_hosts %}
    management_hosts:
      type: tosca.nodes.network.Network.XOS
      properties:
        no-create: true
        no-delete: true
        no-update: true
{% endif %}

# shared_network is for connectivity between VMs, fully created in shared-net.yaml
    shared_network:
      type: tosca.nodes.network.Network.XOS
      properties:
        no-create: true
        no-delete: true
        no-update: true

# wan_network for vPGWU and its upstream connectivity, fully created in wan-net.yaml
    wan_network:
      type: tosca.nodes.network.Network.XOS
      properties:
        no-create: true
        no-delete: true
        no-update: true

# VLAN networks for RRH and vBBU, fully created in vsg-net.yaml
    vsg_network:
      type: tosca.nodes.network.Network.XOS
      properties:
        no-create: true
        no-delete: true
        no-update: true

# flat network for vMME, vSGWC, vSGWU, to connect to RRU, fully created in flat-net.yaml
    flat_network:
      type: tosca.nodes.network.Network.XOS
      properties:
        no-create: true
        no-delete: true
        no-update: true

# ONOS_CORD, fully created in vtn.yaml
    service#ONOS_CORD:
      type: tosca.nodes.ONOSService
      properties:
        no-delete: true
        no-create: true
        no-update: true

# ONOS_Fabric, fully created in fabric.yaml
    service#ONOS_Fabric:
      type: tosca.nodes.ONOSService
      properties:
        no-delete: true
        no-create: true
        no-update: true

# CORD Services
    service#vbbu:
      type: tosca.nodes.VBBUService
      properties:
          view_url: /admin/vbbu/vbbuservice/$id$/
          kind: vRAN
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vbbu/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vhss:
      type: tosca.nodes.VHSSService
      properties:
          view_url: /admin/vhss/vhssservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vhss/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vmme:
      type: tosca.nodes.VMMEService
      properties:
          view_url: /admin/vmme/vmmeservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vmme/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vmm:
      type: tosca.nodes.VMMService
      properties:
          view_url: /admin/vmm/vmmservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vmm/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vsm:
      type: tosca.nodes.VSMService
      properties:
          view_url: /admin/vsm/vsmservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vsm/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vsgwc:
      type: tosca.nodes.VSGWCService
      properties:
          view_url: /admin/vsgwc/vsgwcservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vsgwc/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vsgwu:
      type: tosca.nodes.VSGWUService
      properties:
          view_url: /admin/vsgwu/vsgwuservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vsgwu/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vpgwc:
      type: tosca.nodes.VPGWCService
      properties:
          view_url: /admin/vpgwc/vpgwcservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vpgwc/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    service#vpgwu:
      type: tosca.nodes.VPGWUService
      properties:
          view_url: /admin/vpgwu/vpgwuservice/$id$/
          kind: vEPC
          public_key: { get_artifact: [ SELF, pubkey, LOCAL_FILE] }
          private_key_fn: /opt/xos/services/vpgwu/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

# CORD Slices
    mysite_vBBU_slice:
      description: vBBU Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vbbu_service:
              node: service#vbbu
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork

          # TODO: uncomment this on full pod
          #- connection_to_management_host:
          #    node: management_host
          #    relationship: tosca.relationships.ConnectsToNetwork

    mysite_vHSS_slice:
      description: vHSS Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vhss_service:
              node: service#vhss
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork

    mysite_vMME_slice:
      description: vMME Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vmme_service:
              node: service#vmme
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_flat_network:
              node: flat_network
              relationship: tosca.relationships.ConnectsToNetwork

    mysite_vMM_slice:
      description: vMM Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vmm_service:
              node: service#vmm
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork

    mysite_vSM_slice:
      description: vSM Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vsm_service:
              node: service#vsm
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork

    mysite_vSGWC_slice:
      description: vSGWC Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vsgwc_service:
              node: service#vsgwc
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_flat_network:
              node: flat_network
              relationship: tosca.relationships.ConnectsToNetwork

    mysite_vSGWU_slice:
      description: vSGWU Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vsgwu_service:
              node: service#vsgwu
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_flat_network:
              node: flat_network
              relationship: tosca.relationships.ConnectsToNetwork

    mysite_vPGWC_slice:
      description: vPGWC Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vpgwc_service:
              node: service#vpgwc
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork

    mysite_vPGWU_slice:
      description: vPGWU Service Slice
      type: tosca.nodes.Slice
      properties:
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.MemberOfSite
          - vpgwu_service:
              node: service#vpgwu
              relationship: tosca.relationships.MemberOfService
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.DefaultImage
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.DefaultFlavor
          - connection_to_management:
              node: management
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_shared_network:
              node: shared_network
              relationship: tosca.relationships.ConnectsToNetwork
          - connection_to_wan_network:
              node: wan_network
              relationship: tosca.relationships.ConnectsToNetwork

